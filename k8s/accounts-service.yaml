apiVersion: v1
kind: Service
metadata:
  name: accounts-service
  labels:
    app: accounts
spec:
  type: NodePort
  ports:
    - targetPort: 80
      port: 80
  selector:
    app: accounts
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: accounts-configuration
  labels:
    app: accounts
data:
  ACCESS_TOKEN_EXPIRE_MINUTES: "10"
  PROJECT_NAME: "Accounts Microservice"
---
apiVersion: v1
kind: Secret
metadata:
  name: accounts-credentials
type: Opaque
data:
  email: YWRtaW5AYWRtaW4uY29t
  password: cGFzc3dvcmQ=
  secret_key: c2VjcmV0
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: accounts-deployment
  labels:
    app: accounts
spec:
  replicas: 1
  selector:
    matchLabels:
      app: accounts
  template:
    metadata:
      labels:
        app: accounts
    spec:
      initContainers:
        - name: wait-database
          image: postgres:16
          command:
            [
              "sh",
              "-c",
              "until pg_isready -h ${POSTGRES_HOST};  do echo waiting for database; sleep 2; done;",
            ]
          env:
            - name: POSTGRES_HOST
              value: "postgres-service"
        # - name: perform-migrations
        #   image: users
        #   command: ["alembic", "upgrade", "head"]
        #   env:
        #     - name: POSTGRES_HOST
        #       value: "postgres-service"
        #     - name: POSTGRES_PASSWORD
        #       valueFrom:
        #         secretKeyRef:
        #           name: postgres-credentials
        #           key: password
        #   envFrom:
        #     - configMapRef:
        #         name: postgres-configuration
      containers:
        - name: accounts
          image: accounts
          ports:
            - containerPort: 8000
          # livenessProbe:
          #   initialDelaySeconds: 3
          #   periodSeconds: 5
          #   httpGet:
          #     path: /api/health/
          #     port: 8000
          env:
            - name: POSTGRES_HOST
              value: "postgres-service"
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-credentials
                  key: password
          envFrom:
            - configMapRef:
                name: postgres-configuration
            - configMapRef:
                name: accounts-configuration